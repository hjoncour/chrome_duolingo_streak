{"ast":null,"code":"var _jsxFileName = \"/Users/hugo/Desktop/chrome_img_ascii/src/components/imageToAscii.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageToAscii = ({\n  image\n}) => {\n  _s();\n  const [asciiArt, setAsciiArt] = useState('');\n  useEffect(() => {\n    const img = new Image();\n    img.src = image;\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const width = img.width;\n      const height = img.height;\n      canvas.width = width;\n      canvas.height = height;\n      ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, width, height);\n      const asciiChars = '@%#*+=-:. ';\n      let asciiResult = '';\n      for (let y = 0; y < height; y += 6) {\n        for (let x = 0; x < width; x += 3) {\n          const pixelData = ctx === null || ctx === void 0 ? void 0 : ctx.getImageData(x, y, 3, 6).data;\n          const grayValue = pixelData ? 0.2126 * pixelData[0] + 0.7152 * pixelData[1] + 0.0722 * pixelData[2] : 0;\n          const asciiIndex = Math.round((asciiChars.length - 1) * grayValue / 255);\n          asciiResult += asciiChars[asciiIndex];\n        }\n        asciiResult += '\\n';\n      }\n      setAsciiArt(asciiResult);\n    };\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    style: {\n      fontFamily: 'Courier, monospace',\n      fontSize: '6px',\n      lineHeight: '6px'\n    },\n    children: asciiArt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageToAscii, \"d/Agxa8a7MQN1P8U2tKdSPA7qmc=\");\n_c = ImageToAscii;\nexport default ImageToAscii;\nvar _c;\n$RefreshReg$(_c, \"ImageToAscii\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ImageToAscii","image","_s","asciiArt","setAsciiArt","img","Image","src","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","asciiChars","asciiResult","y","x","pixelData","getImageData","data","grayValue","asciiIndex","Math","round","length","style","fontFamily","fontSize","lineHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hugo/Desktop/chrome_img_ascii/src/components/imageToAscii.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ImageToAscii: React.FC<{ image: string }> = ({ image }) => {\n  const [asciiArt, setAsciiArt] = useState('');\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = image;\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const width = img.width;\n      const height = img.height;\n      canvas.width = width;\n      canvas.height = height;\n\n      ctx?.drawImage(img, 0, 0, width, height);\n\n      const asciiChars = '@%#*+=-:. ';\n      let asciiResult = '';\n\n      for (let y = 0; y < height; y += 6) {\n        for (let x = 0; x < width; x += 3) {\n          const pixelData = ctx?.getImageData(x, y, 3, 6).data;\n          const grayValue = pixelData\n            ? 0.2126 * pixelData[0] + 0.7152 * pixelData[1] + 0.0722 * pixelData[2]\n            : 0;\n          const asciiIndex = Math.round((asciiChars.length - 1) * grayValue / 255);\n          asciiResult += asciiChars[asciiIndex];\n        }\n        asciiResult += '\\n';\n      }\n\n      setAsciiArt(asciiResult);\n    };\n  }, [image]);\n\n  return (\n    <pre style={{ fontFamily: 'Courier, monospace', fontSize: '6px', lineHeight: '6px' }}>\n      {asciiArt}\n    </pre>\n  );\n};\n\nexport default ImageToAscii;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGN,KAAK;IACfI,GAAG,CAACG,MAAM,GAAG,MAAM;MACjB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;MACnC,MAAMC,KAAK,GAAGT,GAAG,CAACS,KAAK;MACvB,MAAMC,MAAM,GAAGV,GAAG,CAACU,MAAM;MACzBN,MAAM,CAACK,KAAK,GAAGA,KAAK;MACpBL,MAAM,CAACM,MAAM,GAAGA,MAAM;MAEtBH,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEI,SAAS,CAACX,GAAG,EAAE,CAAC,EAAE,CAAC,EAAES,KAAK,EAAEC,MAAM,CAAC;MAExC,MAAME,UAAU,GAAG,YAAY;MAC/B,IAAIC,WAAW,GAAG,EAAE;MAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,IAAI,CAAC,EAAE;QAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,EAAEM,CAAC,IAAI,CAAC,EAAE;UACjC,MAAMC,SAAS,GAAGT,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEU,YAAY,CAACF,CAAC,EAAED,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACI,IAAI;UACpD,MAAMC,SAAS,GAAGH,SAAS,GACvB,MAAM,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,GAAGA,SAAS,CAAC,CAAC,CAAC,GACrE,CAAC;UACL,MAAMI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACV,UAAU,CAACW,MAAM,GAAG,CAAC,IAAIJ,SAAS,GAAG,GAAG,CAAC;UACxEN,WAAW,IAAID,UAAU,CAACQ,UAAU,CAAC;QACvC;QACAP,WAAW,IAAI,IAAI;MACrB;MAEAd,WAAW,CAACc,WAAW,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAK8B,KAAK,EAAE;MAAEC,UAAU,EAAE,oBAAoB;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAM,CAAE;IAAAC,QAAA,EAClF9B;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnC,EAAA,CAxCIF,YAAyC;AAAAsC,EAAA,GAAzCtC,YAAyC;AA0C/C,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}