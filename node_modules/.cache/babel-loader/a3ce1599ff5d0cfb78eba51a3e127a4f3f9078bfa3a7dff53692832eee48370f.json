{"ast":null,"code":"var _jsxFileName = \"/Users/hugo/Desktop/chrome_img_ascii/src/components/qrCodeGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = () => {\n  _s();\n  const [data, setData] = useState('');\n  const [qrCodeData, setQRCodeData] = useState('');\n  const qrCodeRef = useRef(null);\n  const [error, setError] = useState('');\n  const generateQRCode = () => {\n    try {\n      if (data.trim() !== '') {\n        setQRCodeData(data);\n        setError('');\n      } else {\n        setQRCodeData('');\n        setError('Please enter data to generate a QR code.');\n      }\n    } catch (error) {\n      setError('An error occurred while generating the QR code.');\n    }\n  };\n  const downloadQRCode = () => {\n    if (!qrCodeRef.current) {\n      setError('No QR code to download.');\n      return;\n    }\n    const canvas = qrCodeRef.current.querySelector('canvas');\n    if (!canvas) {\n      setError('An error occurred while downloading the QR code.');\n      return;\n    }\n    const url = canvas.toDataURL('image/png');\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'qrcode.png';\n    a.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter URL, text, or contact information\",\n      value: data,\n      onChange: e => setData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateQRCode,\n      children: \"Generate QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: qrCodeRef,\n      children: /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrCodeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), qrCodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadQRCode,\n        children: \"Download QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeGenerator, \"Kw6wO+PxTQVyLiP+G+sqh5aCr/I=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["React","useState","useRef","QRCode","jsxDEV","_jsxDEV","QRCodeGenerator","_s","data","setData","qrCodeData","setQRCodeData","qrCodeRef","error","setError","generateQRCode","trim","downloadQRCode","current","canvas","querySelector","url","toDataURL","a","document","createElement","href","download","click","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","ref","_c","$RefreshReg$"],"sources":["/Users/hugo/Desktop/chrome_img_ascii/src/components/qrCodeGenerator.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport QRCode from 'qrcode.react';\n\nconst QRCodeGenerator: React.FC = () => {\n  const [data, setData] = useState('');\n  const [qrCodeData, setQRCodeData] = useState('');\n  const qrCodeRef = useRef<any>(null);\n  const [error, setError] = useState('');\n\n  const generateQRCode = () => {\n    try {\n      if (data.trim() !== '') {\n        setQRCodeData(data);\n        setError('');\n      } else {\n        setQRCodeData('');\n        setError('Please enter data to generate a QR code.');\n      }\n    } catch (error) {\n      setError('An error occurred while generating the QR code.');\n    }\n  };\n\n  const downloadQRCode = () => {\n    if (!qrCodeRef.current) {\n      setError('No QR code to download.');\n      return;\n    }\n    const canvas = qrCodeRef.current.querySelector('canvas');\n    if (!canvas) {\n      setError('An error occurred while downloading the QR code.');\n      return;\n    }\n\n    const url = canvas.toDataURL('image/png');\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'qrcode.png';\n    a.click();\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL, text, or contact information\"\n        value={data}\n        onChange={(e) => setData(e.target.value)}\n      />\n      <button onClick={generateQRCode}>Generate QR Code</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <div ref={qrCodeRef}>\n        <QRCode value={qrCodeData} />\n      </div>\n      {qrCodeData && (\n        <div>\n          <button onClick={downloadQRCode}>Download QR Code</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRCodeGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}